"""
Django settings for ARMODServers project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import sys
SITE_ID = 1

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

sys.path.insert(0, os.path.join(BASE_DIR, 'Apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+7@qig2s8elk5ia4l6enph^j6)-*+ky$k1(yo#(7v%9+lzr7tz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'Apps.Users',
    'Apps.Applications',
    'Apps.ARExperiences',
    'Apps.TagManager',
    'Apps.ARShowcasesCenter',
    'Apps.Api',
    'Apps.Apiv2',
    'Apps.Index',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.gzip.GZipMiddleware'
]


ROOT_URLCONF = 'ARMODServers.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ARMODServers.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_PARSER_CLASSES': ['rest_framework.parsers.JSONParser',
                               'rest_framework.parsers.FormParser',
                               'rest_framework.parsers.MultiPartParser',],
    'DEFAULT_AUTHENTICATION_CLASSES': ['Api.utils.Authtication', ],
    'DEFAULT_THROTTLE_CLASSES': [
        'Api.utils.VisitThrottle',
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',


    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '10000/day',
        'user': '10000/day',
        'api': '10000/day'
    },
    'DEFAULT_PAGINATION_CLASS':  'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10 
}


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'armod_db',
        'USER': 'armod_admin',
        'PASSWORD': 'Admin@ARMOD',
        # 'HOST': 'rm-uf632120sr3gy67kl.mysql.rds.aliyuncs.com',  # Product
        'HOST':'rm-uf632120sr3gy67kl4o.mysql.rds.aliyuncs.com', # Test
        'PORT': '3306',
        'OPTIONS': {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# django认证系统使用的模型类
AUTHENTICATION_BACKENDS = (
    'Users.views.CustomBackend',
)

AUTH_USER_MODEL = 'Users.User'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static_collections')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]


# 媒体文件路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'meida')
IMAGE_ROOT = os.path.join(MEDIA_ROOT, 'images')
IMAGE_URL = 'images'
AREXPERIENCE_ROOT = os.path.join(MEDIA_ROOT, 'arexperiences')
AREXPERIENCE_URL = 'arexperiences'

# 阿里云 OSS
OSS_ACCESS_KEY_ID = "LTAI5tAbsG92RxjUs8VSZ3Fx"
OSS_ACCESS_KEY_SECRET = "aXxjIl8CK8X9cisgYzJ4uvY8myLfOO"
# OSS_ENDPOINT = "oss-cn-shanghai-internal.aliyuncs.com"
OSS_ENDPOINT="oss-cn-shanghai.aliyuncs.com"
OSS_BUCKET_NAME = "armod-assets-cn"
ALIYUN_OSS_ACCESS_URL = ''
OSS_BASE_URL = 'https://assets.cn.weacw.com'
BASE_WEBSITE_URL= 'https://phantomsxr.cn'

# 发送邮件配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# 是否使用TLS安全传输协议(用于在两个通信应用程序之间提供保密性和数据完整性。)
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True                        # 是否使用SSL加密，qq企业邮箱要求使用
EMAIL_HOST = 'smtp.qiye.aliyun.com'         # 发送邮件的邮箱的SMTP服务器，这里用了163邮箱
EMAIL_PORT = 465                            # 发件箱的SMTP服务器端口
EMAIL_HOST_USER = 'no-reply@weacw.com'      # 发送邮件的邮箱地址
EMAIL_HOST_PASSWORD = 'Admin@noreply'       # 发送邮件的邮箱密码(这里使用的是授权码)
EMAIL_PROM = 'ARMOD<no-reply@weacw.com>'    # 收件人看到的发件人


# django的缓存配置, 使用redis
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://localhost:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}


# 配置session存储
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"
# API Redis缓存过期时间
API_CACHE_EXPIRED = 3600

# 配置登录url地址
LOGIN_URL = '/auth/login'


# # 设置Django的文件存储类
# DEFAULT_FILE_STORAGE = 'utils.fdfs.storage.FDFSStorage'

# # 设置fdfs使用的client.conf文件路径
# FDFS_CLIENT_CONF = './utils/fdfs/client.conf'

# # 设置fdfs存储服务器上nginx的IP和端口号
# FDFS_URL = 'http://192.168.229.130:80/'


# # 全文检索框架配置
# HAYSTACK_CONNECTIONS = {
#     'default': {
#         # 使用whoosh引擎
#         # 'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
#         'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
#         # 索引文件路径
#         'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
#     },
# }

# # 当添加、修改、删除数据时，自动生成索引
# HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# HAYSTACK_SEARCH_RESULTS_PER_PAGE = 6  # 指定搜索结果每页显示多少条信息
